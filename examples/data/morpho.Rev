D <- readDiscreteCharacterData(file="morpho.nex")
n_taxa <- D.ntaxa()
n_sites <- D.nchar(1)
names <- D.names()
n_branches <- 2 * n_taxa - 3
mi = 1
Q := fnJC(3)
T <- readTrees("morpho.tre")[1]

topology ~ dnUniformTopology(n_taxa, names)
moves[mi++] = mvNNI(topology)
for (i in 1:n_branches) {
  br_lens[i] ~ dnExponential(10.0)
  moves[mi++] = mvScale(br_lens[i]) 
}
TL := sum(br_lens)

##### phylogeny := treeAssembly(topology, br_lens)

topology.setValue(T)

scaleRate <- 1.0
seq ~ dnPhyloCTMCFiltered(tree=topology,
                          Q=Q,
                          branchRates=scaleRate,
                          nSites=n_sites,
                          type="Standard",
                          conditioningColumns="MimicMissing")
seq.clamp(D)
structure(seq)

mymodel = model(Q)

monitors[1] = mnModel(filename="output/morpo-mcmc.log", printgen=10, separator = TAB)
monitors[2] = mnFile(filename="output/morpo-mcmc.trees", printgen=10, separator = TAB, phylogeny)

mymcmc = mcmc(mymodel, monitors, moves)

mymcmc.run(generations=5000)


# Now, we will analyze the tree output.
# Let us start by reading in the tree trace
treetrace = readTreeTrace("output/morpo-mcmc.trees", treetype="non-clock")
# and get the summary of the tree trace
treetrace.summarize()
mapTree(treetrace,"output/morpo-mcmc.tree")