################################################################################
#
# RevBayes Exercise: Calculating Marginal Liklihoods and Bayes Factors to test
#  data partitioning strategies
# 
# This file: Specifies the full model parameters and moves for a single, uniform
#				partition model
#
# authors: Tracy A. Heath, Michael Landis, and Sebastian Hoehna
#
################################################################################

###### This just defines a single model for all sites #######

### Read in sequence data for both genes

D <- readCharacterData("data/conifer_atpB.nex")
data_atpB <- D[1]
D <- readCharacterData("data/conifer_rbcL.nex")
data_rbcL <- D[1]

### Create concatenated data matrix
data <- data_atpB + data_rbcL

# Get some useful variables from the data. We need these later on.
n_species <- data.ntaxa()
ns <- data.nchar()
n_sites <- ns[1]
names <- data.names()
n_branches <- 2 * n_species - 3

mi <- 0

#### specify the GTR+G substitution model applied uniformly to all sites ###
er_prior <- v(1,1,1,1,1,1)
er ~ dnDirichlet(er_prior)
moves[mi++] <- mvSimplexElementScale(er, alpha=10.0, tune=true, weight=3.0)


sf_prior <- v(1,1,1,1) 
sf ~ dnDirichlet(sf_prior)
moves[mi++] <- mvSimplexElementScale(sf, alpha=10.0, tune=true, weight=2.0)


#### create a deterministic variable for the rate matrix ####
Q := gtr(er,sf) 


shape_prior <- 0.05
shape ~ dnExponential( shape_prior )
# Get the vector of normalized, discretized gamma rates for 4 categories
norm_gamma_rates := discretizeGamma( shape, 4 )

# add moves for the stationary frequencies, exchangeability rates and the shape parameter
moves[mi++] <- mvScale(shape, lambda=1.0, tune=true, weight=1.0)




#### Specify a uniform prior on the tree topology #### 
topology ~ uniformTopology(n_species, names)

# moves on the tree
moves[mi++] <- mvNNI(topology, weight=10.0)


#### Specify a prior and moves on the branch lengths #### 
# create a random variable for each branch length using a for loop
for (i in 1:n_branches) {
  # We use here the exponential distribution with rate 1.0 as the branch length prior
  br_lens[i] ~ dnExponential(1.0)
  
  # Add a move for the branch length. We just take a simple scaling move since the value is a positive real number.
  moves[mi++] <- mvScale(br_lens[i],lambda=1,tune=true,weight=1) 
}


# Build the tree by combining the topology with the branch length.
phylogeny := treeAssembly(topology, br_lens)


# the sequence evolution model
phyloSeq ~ phyloCTMC(tree=phylogeny, Q=Q, siteRates=norm_gamma_rates, nSites=n_sites, type="DNA")

# attach the data
phyloSeq.clamp(data)

mymodel <- model(sf)


