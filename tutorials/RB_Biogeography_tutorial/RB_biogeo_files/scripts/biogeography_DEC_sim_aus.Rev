################################################################################
#
# RevBayes Exercise: Bayesian inference of biogeography
# 
# This file: Specifies the full DEC model with parameters and moves 
#            with equal rates of area gain and loss.
#
# authors: Michael Landis
#
################################################################################


############
# Settings #
############

# analysis input/output
in_fp           <- "/Users/mlandis/Documents/code/revbayes-code/examples/data/"
data_fn         <- "sim_aus_50tip_33area.nex"
area_fn         <- "sim_aus_50tip_33area.atlas.txt"
out_fp          <- "/Users/mlandis/data/bayarea/output/"
out_str         <- "bg_big"

# input objects
vdata           <- readDiscreteCharacterData(in_fp + data_fn)
atlas           <- readAtlas(in_fp + area_fn)
vtree           <- readTrees(in_fp + data_fn)
tree			<- vtree[1]
data			<- vdata

# MCMC settings
nGens           <- 25000
fBurn           <- 0.2



###########
#  Model  #
###########

# Per-area gain and loss rates 
#   glr[1]: 1->0, glr[2]: 0->1
 
glr[1] ~ dnExponential(10.0)
glr[2] ~ dnExponential(10.0)

# dp is the distance-dependence power parameter, beta
dp          ~ dnExponential(10.0)

# grm is the geographical rate modifier function, eta
grm         := fnBiogeoGRM(atlas=atlas, distancePower=dp, useDistance=true)

# Q models the dispersal-extinction process (CTMC)
Q           := fnBiogeoDE(gainLossRates=glr, geoRateMod=grm, numAreas=data.nchar(1), forbidExtinction=true)

# csf models the cladogenic state frequencies (sympatry, peripatry, allopatry)
csf         ~ dnDirichlet([1,1,1]) 

# M is focal model, the range data given the tree, the atlas, and the DEC process
M           ~  dnPhyloDACTMC(tree=tree, Q=Q, C=csf, type="biogeo", forbidExtinction=true, useCladogenesis=true)

# attach observation to M
M.clamp(data)

# create the model!
my_model    <- model(glr)



#########
# Moves #
#########

n_nodes  <- tree.nnodes()

# standard parameter moves
moves[1] <- mvScale(x=glr[1], lambda=0.5, tune=false, weight=5.0)
moves[2] <- mvScale(x=glr[2], lambda=0.5, tune=false, weight=5.0)
moves[3] <- mvScale(x=dp, lambda=0.5, tune=false, weight=5.0)
moves[4] <- mvSimplexElementScale(csf, alpha=10.0, tune=false, weight=4.0)

# data augmentation moves
moves[4] <- mvNodeCHRS(ctmc=M, qmap=Q, tree=tree, lambda=0.1, type="biogeo", weight=2.0*n_nodes)
moves[5] <- mvPathCHRS(ctmc=M, qmap=Q, tree=tree, lambda=0.1, type="biogeo", weight=2.0*n_nodes)
moves[6] <- mvNodeCHRS(ctmc=M, qmap=Q, tree=tree, lambda=0.5, type="biogeo", weight=n_nodes)
moves[7] <- mvPathCHRS(ctmc=M, qmap=Q, tree=tree, lambda=0.5, type="biogeo", weight=n_nodes)



############
# Monitors #
############

# standard monitors
monitors[1] <- mnScreen(printgen=10, glr, csf, dp)
monitors[2] <- mnFile(filename=out_fp+out_str+".parameters.txt", printgen=10, glr, csf, dp)

# character history monitors
monitors[3] <- mnCharHistoryNewick(filename=out_fp+out_str+".events.txt", ctmc=M, tree=tree, printgen=10, style="events")
monitors[4] <- mnCharHistoryNewick(filename=out_fp+out_str+".counts.txt", ctmc=M, tree=tree, printgen=10, style="counts")
monitors[5] <- mnCharHistoryNhx(filename=out_fp+out_str+".nhx.txt", ctmc=M, tree=tree, atlas=atlas, samplegen=10, maxgen=nGens, burnin=0.25)
